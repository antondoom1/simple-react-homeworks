{"version":3,"sources":["p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/HW6.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/JuniorPlus.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","messageSection","ava","src","avatar","alt","mBody","name","message","time","AlternativeMessage","useState","Date","toLocaleTimeString","hour","minute","arr","setArr","value","setValue","mappedMessage","map","m","key","onClickButtonHandler","trim","inputSection","decor","formInner","placeholder","onChange","e","currentTarget","onKeyDown","keyCode","ctrlKey","type","onClick","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","_id","priority","priorityTextColor","color","table","style","b","deleteAffairCallback","Affairs","mappedAffairs","data","a","filterHandler","filter","setFilter","addActiveButtonClassname","active","wrapper","length","filterButtons","defaultAffairs","HW2","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnterPress","inputClass","errorInput","input","form","onBlur","onKeyPress","button","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","trimmedName","HW3","setUsers","v1","SuperInputText","onChangeText","onEnter","spanClassName","finalSpanClassName","finalInputClassName","superInput","inv","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanStyle","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","spanWrapper","undefined","buttonsWrapper","PreJunior","Error404","Junior","JuniorPlus","PATH","Pages","path","element","to","Header","header","navData","isActive","link","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2a25289b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__s9Qz9\",\"active\":\"Header_active__36N3Q\",\"block\":\"Header_block__bQPQi\",\"header\":\"Header_header__7EdYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageSection\":\"Message_messageSection__3x-dR\",\"ava\":\"Message_ava__1cic_\",\"mBody\":\"Message_mBody__16luW\",\"name\":\"Message_name__3ufS_\",\"message\":\"Message_message__3QzcT\",\"time\":\"Message_time__2AQuu\",\"inputSection\":\"Message_inputSection__2Kjk1\",\"formInner\":\"Message_formInner__1TxD2\",\"decor\":\"Message_decor__3kR1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__2krny\",\"mappedAffairs\":\"Affairs_mappedAffairs__ikmE_\",\"table\":\"Affairs_table__1hieA\",\"filterButtons\":\"Affairs_filterButtons__2o2Xz\",\"active\":\"Affairs_active__33ItX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__1Yt0B\",\"form\":\"Greeting_form__x3850\",\"input\":\"Greeting_input__3llhY\",\"errorInput\":\"Greeting_errorInput__3Ywak\",\"button\":\"Greeting_button__7Ryvv\",\"count\":\"Greeting_count__36G4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3glfo\",\"red\":\"SuperButton_red__3Tgda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1O7VK\",\"errorInput\":\"SuperInputText_errorInput__3uprf\",\"error\":\"SuperInputText_error__1zGK0\",\"inv\":\"SuperInputText_inv__GkiEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3gthj\",\"column\":\"HW4_column__25LBL\",\"testSpanError\":\"HW4_testSpanError__2Yu1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1bOM2\",\"spanClassName\":\"SuperCheckbox_spanClassName__11N03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanWrapper\":\"HW6_spanWrapper__2AuoB\",\"buttonsWrapper\":\"HW6_buttonsWrapper__GUWD9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__AhHE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__3GmfH\"};","import React from 'react'\nimport s from './Message.module.css'\n\nexport type MessagePropsType = {\n  avatar: string\n  name: string\n  message: string\n  time: string\n}\n\nfunction Message(props: MessagePropsType) {\n  return (\n    <div className={s.messageSection}>\n      <div className={s.ava}><img src={props.avatar} alt={'ava'}/></div>\n      <div className={s.mBody}>\n        <div className={s.name}>{props.name}</div>\n        <div className={s.message}>{props.message}</div>\n        <div className={s.time}>{props.time}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n\n\n\n\n\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport s from './Message.module.css'\nimport Message, {MessagePropsType} from './Message'\n\nfunction AlternativeMessage() {\n  const [arr, setArr] = useState<Array<MessagePropsType>>([{\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'Some Text',\n    time: new Date().toLocaleTimeString('ru-Ru', {\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n  ])\n  const [value, setValue] = useState<string>('')\n\n  const mappedMessage = arr.map(m => {\n    return (\n      <Message\n        key={m.message}\n        avatar={m.avatar}\n        name={m.name}\n        message={m.message}\n        time={m.time}\n      />\n    )\n  })\n\n  const onChangeTextAreaHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.currentTarget.value)\n  }\n  const onClickButtonHandler = () => {\n    if (!!value.trim()) {\n      setArr([\n        ...arr,\n        {\n          avatar: arr[0].avatar,\n          name: arr[0].name,\n          message: value,\n          time: arr[0].time\n        }\n      ])\n    }\n    setValue('')\n  }\n  const onKeyDownHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.keyCode === 13 && e.ctrlKey) {\n      onClickButtonHandler()\n    }\n  }\n\n  return (\n    <div>\n\n      {mappedMessage}\n\n      <div className={s.inputSection}>\n        <form className={s.decor}>\n          <div className={s.formInner}>\n            <textarea\n              placeholder={'Enter your message...'}\n              value={value}\n              onChange={onChangeTextAreaHandler}\n              onKeyDown={onKeyDownHandler}/>\n            <button type=\"button\" onClick={onClickButtonHandler}>Send</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default AlternativeMessage\n\n","import React from 'react'\nimport Message from './Message'\nimport AlternativeMessage from './AlternativeMessage'\n\nconst messageData = {\n  avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n  name: 'Some Name',\n  message: 'some text',\n  time: '22:00'\n}\n\nfunction HW1() {\n  return (\n    <div>\n      <hr/>\n      homeworks 1\n      {/*<Message*/}\n      {/*  avatar={messageData.avatar}*/}\n      {/*  name={messageData.name}*/}\n      {/*  message={messageData.message}*/}\n      {/*  time={messageData.time}*/}\n      {/*/>*/}\n      {/*<hr/>*/}\n      {/*для личного творчества, могу проверить*/}\n      <AlternativeMessage/>\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором хранится название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n  {\n    red, className,\n    ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n  }\n) => {\n  const finalClassName = `${red ? s.red : s.default} ${className}`\n\n  return (\n    <button\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType} from './HW2'\nimport s from './Affairs.module.css'\nimport b from './../h4/common/c2-SuperButton/SuperButton.module.css'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype AffairPropsType = {\n  affair: AffairType\n  deleteAffairCallback: (id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n  const {_id, name, priority} = props.affair\n\n  const priorityTextColor = {\n    color: priority === 'high' ? 'red' :\n      priority === 'middle' ? '#ff9900' :\n        'green'\n  }\n\n  const deleteCallback = () => props.deleteAffairCallback(_id)\n\n  return (\n    <table className={s.table}>\n      <tbody>\n      <tr>\n        <td>{name}</td>\n        <td style={priorityTextColor}>\n          [{priority}]\n        </td>\n        <td>\n          <SuperButton className={b.red} onClick={deleteCallback}>\n            x\n          </SuperButton>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype AffairsPropsType = {\n  filter: FilterType\n  data: Array<AffairType>\n  setFilter: (filter: FilterType) => void\n  deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair\n      key={a._id}\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ))\n\n  const filterHandler = (filter: FilterType) => () => props.setFilter(filter)\n\n  const addActiveButtonClassname = (filter: FilterType) => {\n    return props.filter === filter ? s.active : ''\n  }\n\n  return (\n    <div className={s.wrapper}>\n\n      <div className={s.mappedAffairs}>\n\n        {\n          mappedAffairs.length > 0\n            ? mappedAffairs\n            : <span>No tasks in the list</span>\n        }\n\n      </div>\n\n      <div className={s.filterButtons}>\n        <SuperButton\n          className={addActiveButtonClassname('all')}\n          onClick={filterHandler('all')}>All\n        </SuperButton>\n        <SuperButton\n          className={addActiveButtonClassname('high')}\n          onClick={filterHandler('high')}>High\n        </SuperButton>\n        <SuperButton\n          className={addActiveButtonClassname('middle')}\n          onClick={filterHandler('middle')}>Middle\n        </SuperButton>\n        <SuperButton\n          className={addActiveButtonClassname('low')}\n          onClick={filterHandler('low')}>Low\n        </SuperButton>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\nconst defaultAffairs: Array<AffairType> = [\n  {_id: 1, name: 'React', priority: 'high'},\n  {_id: 2, name: 'anime', priority: 'low'},\n  {_id: 3, name: 'games', priority: 'low'},\n  {_id: 4, name: 'work', priority: 'high'},\n  {_id: 5, name: 'html & css', priority: 'middle'}\n]\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n  if (filter === 'all') return affairs\n  else return affairs.filter(a => a.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n  return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n  const [filter, setFilter] = useState<FilterType>('all')\n\n  const filteredAffairs = filterAffairs(affairs, filter)\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n  return (\n    <div>\n      <hr/>\n      homeworks 2\n\n      <Affairs\n        filter={filter}\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n\n      {/*<hr/>*/}\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport {UserType} from './HW3'\n\ntype GreetingPropsType = {\n  name: UserType['name']\n  setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n  addUser: () => void\n  error: boolean\n  totalUsers: number\n  onEnterPress: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\nconst Greeting: React.FC<GreetingPropsType> = (\n  {name, setNameCallback, addUser, error, totalUsers, onEnterPress}\n) => {\n  const inputClass = error ? s.errorInput : s.input\n\n  return (\n    <div className={s.wrapper}>\n      <form className={s.form}>\n        <input\n          value={name}\n          onChange={setNameCallback}\n          onBlur={setNameCallback}\n          onKeyPress={onEnterPress}\n          className={inputClass}\n          placeholder={'Enter the name...'}/>\n        <button className={s.button} onClick={addUser} disabled={!name}>\n          <span>Add</span>\n        </button>\n        <span className={s.count}>{totalUsers}</span>\n      </form>\n    </div>\n  )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3'\n\ntype GreetingContainerPropsType = {\n  users: UserType[]\n  addUserCallback: (name: UserType['name']) => void\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n  const [name, setName] = useState<UserType['name']>('')\n  const [error, setError] = useState<boolean>(true)\n\n  const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    const trimmedName = e.currentTarget.value.trim()\n    if (trimmedName) {\n      setName(trimmedName)\n      error && setError(false)\n    } else {\n      name && setName('')\n      setError(true)\n    }\n  }\n\n  const addUser = () => {\n    addUserCallback(name)\n    alert(`Hello ${name}!`)\n    setName('')\n  }\n\n  const onEnterPress = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && name) {\n      addUser()\n    }\n  }\n\n  const totalUsers = users.length\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      error={error}\n      totalUsers={totalUsers}\n      onEnterPress={onEnterPress}\n    />\n  )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid'\r\n\r\nexport type UserType = {\r\n  _id: string\r\n  name: string\r\n}\r\n\r\nfunction HW3() {\r\n  const [users, setUsers] = useState<UserType[]>([])\r\n\r\n  const addUserCallback = (name: UserType['name']) => {\r\n    setUsers([{_id: v1(), name}, ...users])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <hr/>\r\n      homeworks 3\r\n\r\n      <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n      {/*<hr/>*/}\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeGreeting/>*/}\r\n      <hr/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void\n  onEnter?: () => void\n  error?: string\n  spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n  {\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange, onChangeText,\n    onKeyPress, onEnter,\n    error,\n    className, spanClassName,\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange // если есть пропс onChange\n    && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value)\n  }\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e)\n\n    onEnter // если есть пропс onEnter\n    && e.key === 'Enter' // и если нажата кнопка Enter\n    && onEnter() // то вызвать его\n  }\n\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n  const finalInputClassName = `${s.superInput} ${className} ${error ? s.errorInput : ''}`\n\n  return (\n    <>\n      <input\n        type={'text'}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error ? <span className={finalSpanClassName}>{error}</span> : <span className={s.inv}>а</span>}\n    </>\n  )\n}\n\nexport default SuperInputText\n\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void\n  spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n  {\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange, onChangeChecked,\n    className, spanClassName,\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange\n    && onChange(e)\n\n    onChangeChecked && onChangeChecked(e.currentTarget.checked)\n  }\n\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n  return (\n    <label>\n      <input\n        type={'checkbox'}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      {children && <span className={s.spanClassName}>{children}</span>}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n  const [text, setText] = useState<string>('')\n  const error = text ? '' : 'error'\n\n  const showAlert = () => {\n    if (error) {\n      alert('введите текст...')\n    } else {\n      alert(text) // если нет ошибки показать текст\n    }\n  }\n\n  const [checked, setChecked] = useState<boolean>(false)\n  const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n  return (\n    <div>\n      <hr/>\n      homeworks 4\n\n      <div className={s.column}>\n        <SuperInputText\n          value={text}\n          onChangeText={setText}\n          onEnter={showAlert}\n          error={error}\n          // spanClassName={s.testSpanError}\n        />\n\n        <SuperInputText\n          className={s.blue} // проверьте, работает ли смешивание классов\n        />\n\n        {/*----------------------------------------------------*/}\n\n        <SuperButton>\n          default\n        </SuperButton>\n\n        <SuperButton\n          red // пропсу с булевым значением необязательно указывать true\n          onClick={showAlert}\n        >\n          delete {/*// название кнопки попадёт в children*/}\n        </SuperButton>\n\n        <SuperButton disabled>\n          disabled\n        </SuperButton>\n\n        {/*----------------------------------------------------*/}\n\n        <SuperCheckbox\n          checked={checked}\n          onChangeChecked={setChecked}\n        >\n          some text {/*// этот текст попадёт в children*/}\n        </SuperCheckbox>\n\n        {/*// onChange тоже должен работать*/}\n        <SuperCheckbox checked={checked} onChange={testOnChange}/>\n      </div>\n\n      <hr/>\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeSuperInputText/>*/}\n      {/*<AlternativeSuperButton/>*/}\n      {/*<AlternativeSuperCheckbox/>*/}\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void\n  onEnter?: () => void\n  error?: string\n  spanClassName?: string\n\n  spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n  {\n    autoFocus, // игнорировать изменение этого пропса\n    onBlur,\n    onEnter,\n    spanProps,\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const [editMode, setEditMode] = useState<boolean>(false)\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n  const onEnterCallback = () => {\n    setEditMode(!editMode) // выключить editMode при нажатии Enter\n\n    onEnter && onEnter()\n  }\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n    setEditMode(!editMode) // выключить editMode при нажатии за пределами инпута\n\n    onBlur && onBlur(e)\n  }\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    setEditMode(!editMode) // включить editMode при двойном клике\n\n    onDoubleClick && onDoubleClick(e)\n  }\n\n  const spanClassName = s.spanStyle\n\n  return (\n    <>\n      {editMode\n        ? (\n          <SuperInputText\n            autoFocus // пропсу с булевым значением не обязательно указывать true\n            onBlur={onBlurCallback}\n            onEnter={onEnterCallback}\n\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n          />\n        ) : (\n          <span\n            onDoubleClick={onDoubleClickCallBack}\n            className={spanClassName}\n\n            {...restSpanProps}\n          >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n            {children || restProps.value}\n          </span>\n        )\n      }\n    </>\n  )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\nimport s from './HW6.module.css'\n\nfunction HW6() {\n  const [value, setValue] = useState<string>('')\n\n  const save = () => {\n    saveState<string>('editable-span-value', value)\n  }\n  const restore = () => {\n    setValue(restoreState('editable-span-value', value))\n  }\n\n  return (\n    <div>\n      {/*<hr/>*/}\n      homeworks 6\n\n      {/*should work (должно работать)*/}\n      <div className={s.spanWrapper}>\n        <SuperEditableSpan\n          value={value}\n          onChangeText={setValue}\n          spanProps={{children: value ? undefined : '✎ enter text...'}}\n        />\n      </div>\n      <div className={s.buttonsWrapper}>\n        <SuperButton onClick={save}>save</SuperButton>\n        <SuperButton onClick={restore}>restore</SuperButton>\n      </div>\n\n      <hr/>\n      {/*/!*для личного творчества, могу проверить*!/*/}\n      {/*/!*<AlternativeSuperEditableSpan/>*!/*/}\n      {/*<hr/>*/}\n    </div>\n  )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\n\nfunction PreJunior() {\n  return (\n    <div>\n\n      <HW1/>\n      <HW2/>\n      <HW3/>\n      <HW4/>\n      <HW6/>\n\n    </div>\n  )\n}\n\nexport default PreJunior","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\n\nfunction Junior() {\n  return (\n    <div>\n      Junior\n    </div>\n  )\n}\n\nexport default Junior\n\n","import React from 'react'\n\nfunction JuniorPlus() {\n  return (\n    <div>\n      Junior+\n    </div>\n  )\n}\n\nexport default JuniorPlus\n\n","import React from 'react'\r\nimport {Navigate, Route, Routes} from 'react-router-dom'\r\nimport PreJunior from './pages/PreJunior'\r\nimport Error404 from './pages/Error404'\r\nimport Junior from './pages/Junior'\r\nimport JuniorPlus from './pages/JuniorPlus'\r\n\r\nexport const PATH = {\r\n  PRE_JUNIOR: '/pre-junior',\r\n  JUNIOR: '/junior',\r\n  JUNIOR_PLUS: '/junior-plus'\r\n}\r\n\r\nfunction Pages() {\r\n  return (\r\n    <div>\r\n      {/*Routes выбирает первый подходящий роут*/}\r\n      <Routes>\r\n\r\n        {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n        <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n        <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n\r\n        <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n\r\n        <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n\r\n        {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n        <Route path={'/*'} element={<Error404/>}/>\r\n\r\n      </Routes>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pages\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from './Pages'\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className={s.header}>\r\n\r\n      <NavLink to={PATH.PRE_JUNIOR}\r\n               className={(navData) => navData.isActive ? `${s.link} ${s.active}` : s.link}>pre-junior</NavLink>\r\n\r\n      <NavLink to={PATH.JUNIOR}\r\n               className={(navData) => navData.isActive ? `${s.link} ${s.active}` : s.link}>junior</NavLink>\r\n\r\n      <NavLink to={PATH.JUNIOR_PLUS}\r\n               className={(navData) => navData.isActive ? `${s.link} ${s.active}` : s.link}>junior-plus</NavLink>\r\n\r\n      <div className={s.block}/>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Pages from './Pages'\r\nimport {HashRouter} from 'react-router-dom'\r\n\r\nfunction HW5() {\r\n  return (\r\n    <div>\r\n      {/*в gh-pages лучше работает HashRouter*/}\r\n      <HashRouter>\r\n\r\n        <Header/>\r\n\r\n        <hr/>\r\n\r\n        <Pages/>\r\n\r\n      </HashRouter>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5-rrd-v6/HW5'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={s.App}>\r\n      <div>react homeworks:</div>\r\n      {/*<HW1/>*/}\r\n      {/*<HW2/>*/}\r\n      {/*<HW3/>*/}\r\n      {/*<HW4/>*/}\r\n      <HW5/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\n// igg2\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}